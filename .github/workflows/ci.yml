name: CI

on: [push]

env:
  GPR_URL: "docker.pkg.github.com"
  GPR_USER: "rodeoclash"
  IMAGE_PATH_LATEST_SERVER: "docker.pkg.github.com/rodeoclash/astoria/astoria-server:latest"
  IMAGE_PATH_LATEST_ANALYSIS: "docker.pkg.github.com/rodeoclash/astoria/astoria-analysis:latest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Log in to GPR
        run: docker login ${GPR_URL} -u ${GPR_USER} -p ${{ secrets.GITHUB_TOKEN }}

      #- name: Pull the server image from GPR
      #  run: docker pull ${IMAGE_PATH_LATEST_SERVER}

      #- name: Pull the analysis image from GPR
      #  run: docker pull ${IMAGE_PATH_LATEST_ANALYSIS}

      - name: Build the server Docker image
        run: docker build --file server/Dockerfile --tag ${IMAGE_PATH_LATEST_SERVER} --cache-from ${IMAGE_PATH_LATEST_SERVER} --target=development ./server

      - name: Build the analysis Docker image
        run: docker build --file server/Dockerfile --tag ${IMAGE_PATH_LATEST_ANALYSIS} --cache-from ${IMAGE_PATH_LATEST_ANALYSIS} ./analysis

      - name: Publish the server image to GPR
        run: docker push ${IMAGE_PATH_LATEST_SERVER}

      - name: Publish the analysis image to GPR
        run: docker push ${IMAGE_PATH_LATEST_ANALYSIS}

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Log in to GPR
        run: docker login ${GPR_URL} -u ${GPR_USER} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: docker-compose -f docker-compose.ci.yml run server mix test

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Log in to GPR
        run: docker login ${GPR_URL} -u ${GPR_USER} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Lint all
        run: npx prettier --check .

      - name: Lint elixir
        run: docker-compose -f docker-compose.ci.yml run server mix format --check-formatted
