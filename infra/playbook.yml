---
- name: Setup
  hosts: localhost
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    deploy_image_file_local: '{{lookup("env","HOME")}}/deploy_{{lookup("env","SHA")}}.tar'
    deploy_image_name: 'astoria/astoria:{{lookup("env","SHA")}}'
  tasks:
    - pip:
        name: docker

    - name: Build deployment image
      docker_image:
        name: "{{deploy_image_name}}"
        build:
          cache_from: '{{lookup("env","IMAGE_PATH_LATEST")}}'
          dockerfile: Dockerfile
          path: ../server
          target: deploy
          pull: no
        source: build

    - name: Save locally before copy
      docker_image:
        name: "{{deploy_image_name}}"
        archive_path: "{{deploy_image_file_local}}"
        source: local

    - name: Export ssh key
      copy:
        src: id_ed25519_astoria.enc
        dest: '{{lookup("env","HOME")}}/id_ed25519_astoria'
        mode: 0600
        owner: "{{ ansible_user_id }}"

- name: Deploy
  hosts: app
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    ansible_ssh_private_key_file: '{{lookup("env","HOME")}}/id_ed25519_astoria'
    deploy_image_file_local: '{{lookup("env","HOME")}}/deploy_{{lookup("env","SHA")}}.tar'
    deploy_image_file_remote: '/tmp/deploy_{{lookup("env","SHA")}}.tar'
    deploy_image_name: 'astoria/astoria:{{lookup("env","SHA")}}'
  tasks:
    - pip:
        name: docker

    - name: Copy private key to remote
      copy:
        src: github_app_key.enc
        dest: "/root/github_app_key.pem"

    - name: Copy image file to remote
      copy:
        src: "{{deploy_image_file_local}}"
        dest: "{{deploy_image_file_remote}}"

    - name: Load image
      docker_image:
        name: "{{deploy_image_name}}"
        load_path: "{{deploy_image_file_remote}}"
        source: load

    - name: Run migrations
      docker_container:
        name: astoria-migrations
        image: "{{deploy_image_name}}"
        restart_policy: no
        state: started
        command: bin/astoria eval "Astoria.Release.migrate"
        env: &env
          DATABASE_URL: "{{ database_url }}"
          GITHUB_APP_ID: "91034"
          GITHUB_APP_PRIVATE_KEY: /usr/src/app/priv/keys/github_app_key.pem
          GITHUB_CLIENT_ID: Iv1.72f681082d3f83aa
          GITHUB_CLIENT_SECRET: "{{ github_client_secret }}"
          SECRET_KEY_BASE: "{{ secret_key_base }}"
        volumes: &volumes
          - /root/github_app_key.pem:/usr/src/app/priv/keys/github_app_key.pem

    - name: Create websites network
      docker_network:
        name: websites

    - name: Ensure app running
      docker_container:
        name: astoria
        image: "{{deploy_image_name}}"
        log_driver: json-file
        restart_policy: unless-stopped
        log_options:
          "max-size": "5m"
          "max-file": "3"
        state: started
        networks:
          - name: websites
        env: *env
        volumes: *volumes

    - name: Remove uploaded image
      file:
        path: "{{deploy_image_file_remote}}"
        state: absent
